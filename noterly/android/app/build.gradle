def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services' // INFO: Firebase manual installation
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

// INFO: app signing and keystore
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion // WAS: flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        // INFO: required for flutter_local_notifications plugin, when minSdkVersion < 20
        // INFO: required for Firebase
        coreLibraryDesugaringEnabled true

        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "uk.co.tdsstudios.noterly"

        // INFO: needed to prevent desugaring error for flutter_local_notifications plugin
        // INFO: required for Firebase
        multiDexEnabled true

        minSdkVersion rootProject.ext.minSdkVersion // WAS: flutter.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion // WAS: flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        // INFO: this supposedly helps stop the crash due to "could not find libflutter.so", this excludes 'x86' (32-bit)
        ndk {
            abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86_64'
        }
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            // INFO: testing to try and fix splash screen hang issue
            minifyEnabled true
            shrinkResources false // INFO: unsure if this needs to be false or not

            signingConfig signingConfigs.release
        }
    }

    flavorDimensions "default"

    productFlavors {
        dev {
            dimension "default"
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
            resValue "string", "app_name", "Noterly Dev"
            manifestPlaceholders = [appName: "Noterly Dev"]
        }
        production {
            dimension "default"
            applicationId "uk.co.tdsstudios.noterly"
            resValue "string", "app_name", "Noterly"
            manifestPlaceholders = [appName: "Noterly"]
        }
    }


}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // INFO: required for Firebase
    implementation 'com.android.support:multidex:1.0.3'

    // INFO: needed to prevent desugaring error for flutter_local_notifications plugin, 1.1.5 is the LAST VERSION that works
    // noinspection GradleDependency
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'

    // INFO: needed to prevent Android 12L crash for flutter_local_notifications plugin
    implementation 'androidx.window:window:1.0.0'
    implementation 'androidx.window:window-java:1.0.0'
}
